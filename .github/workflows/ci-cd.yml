name: SciPy CI/CD Pipeline

on:
    push:
        branches: [ main, develop ]
    pull_request:
        branches: [ main ]

permissions:
    contents: read
    packages: write

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Build Docker image
              run: docker build -t scipy-app:test .

            - name: Run tests in Docker container
              run: |
                docker run --rm scipy-app:test python -m pytest tests/ -v --cov=src --cov-report=xml

            - name: Run linting
              run: |
                docker run --rm scipy-app:test flake8 src/

            - name: Run code formatting check
              run: |
                docker run --rm scipy-app:test black --check --diff src/

    build-and-push:
        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                context: .
                push: true
                tags: |
                    ghcr.io/${{ github.repository }}:latest
                    ghcr.io/${{ github.repository }}:${{ github.sha }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Deploy to production
              run: |
                echo "Deploy step would go here"
                echo "Could use kubectl, docker-compose, or cloud-specific tools"
